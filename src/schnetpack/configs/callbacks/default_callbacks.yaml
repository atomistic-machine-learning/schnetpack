model_checkpoint:
    _target_: schnetpack.train.ModelCheckpoint
    monitor: "val_loss"      # name of the logged metric which determines when model is improving
    save_top_k: 1           # save k best models (determined by above metric)
    save_last: True         # additionaly always save model from last epoch
    mode: "min"             # can be "max" or "min"
    verbose: False
    dirpath: 'checkpoints/'
    filename: '{epoch:02d}'
    inference_path: 'best_inference_model'
    save_as_torch_script: True


early_stopping:
    _target_: pytorch_lightning.callbacks.EarlyStopping
    monitor: "val_loss"      # name of the logged metric which determines when model is improving
    patience: 150           # how many epochs of not improving until training stops
    mode: "min"             # can be "max" or "min"
    min_delta: 0            # minimum change in the monitored metric needed to qualify as an improvement

lr_monitor:
    _target_: pytorch_lightning.callbacks.LearningRateMonitor
    logging_interval: epoch