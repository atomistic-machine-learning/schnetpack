# @package _global_

defaults:
  - run: default_run
  - globals: default_globals
  - trainer: default_trainer
  - callbacks:
      - checkpoint
      - earlystopping
      - lrmonitor
  - task: default_task
  - model: null
  - data: custom
  - logger: tensorboard
  - experiment: null

print_config: True

# hydra configuration
hydra:
    job:
      chdir: True
    # output paths for hydra logs
    run:
        dir: ${run.path}/${run.id}

    searchpath:
      - file://${oc.env:PWD}
      - file://${oc.env:PWD}/configs

    # disable hydra config storage, since handled manually
    output_subdir: null

    help:
      app_name: SchNetPack Train

      template: |-
        SchNetPack

        == Configuration groups ==
        Compose your configuration from those groups (db=mysql)

        $APP_CONFIG_GROUPS

        == Config ==
        This is the config generated for this run.

        -------
        $CONFIG
        -------

        You can overide the config file with a pre-defined experiment config
        > spktrain experiment=qm9

        or your own experiment config, which needs to be located in a directory called `experiment` in the config search
        path, e.g.,
        > spktrain --config-dir=./my_configs experiment=my_experiment

        with your experiment config located at `./my_configs/experiment/my_experiment.yaml`.
        Your current working directory as well as an optional config subdirectory are automatically in the config
        search path. Therefore, you can put your experiment config either in `./experiment`,
        or `./configs/experiment`.

        You can also override everything with the command line, for example:
        > spktrain experiment=qm9 data_dir=/path/to/datadir data.batch_size=50

        ${hydra.help.footer}